SET SCHEMA FN71837@

CREATE OR REPLACE MODULE MMA_PROJECT_MOD@
DROP MODULE MMA_PROJECT_MOD@

--PROC1--
CREATE PROCEDURE EVENT_INFO(IN v_eventno CHAR(5), OUT v_eventloc VARCHAR(10), OUT v_eventdate DATE, OUT v_ticketprice DECIMAL(9,2))
BEGIN
DECLARE cur CURSOR FOR SELECT EVENTLOC, EVENTDATE, TICKETPRICE FROM EVENTS WHERE EVENTNO = v_eventno;
OPEN cur;
FETCH cur INTO v_eventloc, v_eventdate, v_ticketprice;
END@

DROP PROCEDURE EVENT_INFO@

SELECT * FROM EVENTS@

--PROC2--
CREATE PROCEDURE CHECK_FNO(IN v_fno ANCHOR FIGHTERS.FNO)
BEGIN
 DECLARE at_end INTEGER DEFAULT 0;
 DECLARE v_fighter CHAR(3) DEFAULT ' ';
 DECLARE not_found CONDITION FOR SQLSTATE '02000';
 DECLARE c1 CURSOR FOR SELECT FNO FROM FIGHTERS;
 DECLARE CONTINUE HANDLER FOR not_found
 		RESIGNAL SQLSTATE '22375' SET MESSAGE_TEXT = 'FIGHTER NOT FOUND!'; 
 		SET at_end = 1;
 OPEN c1;
 L1:LOOP
  FETCH c1 INTO v_fighter;
  IF v_fighter != v_fno THEN
  ITERATE L1;
  SIGNAL not_found;
  ELSEIF at_end = 1 THEN
  LEAVE L1;
  END IF;
  END LOOP;
 CLOSE c1;
END@

DROP PROCEDURE CHECK_FNO@

SELECT * FROM FIGHTERS@

--PROC3--
CREATE PROCEDURE EVENT_COMP(IN v_eventno CHAR(5), OUT v_compname VARCHAR(20))
BEGIN
DECLARE at_end INTEGER DEFAULT 0;
DECLARE v_eno CHAR(5);
DECLARE c2 CURSOR FOR SELECT EVENTNO FROM EVENTS;
DECLARE c3 CURSOR FOR SELECT COMPNAME FROM EVENTS;
OPEN c2;
OPEN c3;
WHILE at_end = 0 DO
FETCH c2 INTO v_eno;
IF v_eno != v_eventno THEN
SET at_end = 0;
FETCH c3 INTO v_compname;
ELSEIF v_eno = v_eventno THEN
SET at_end = 1;
FETCH c3 INTO v_compname;
END IF;
END WHILE;
END@


DROP PROCEDURE EVENT_COMP@
SELECT * FROM EVENTS@